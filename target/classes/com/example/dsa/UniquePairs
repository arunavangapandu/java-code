class Pair {
    String first;
    String second;

    public Pair(String first, String second) {
        this.first = first;
        this.second = second;
    }

    // Override equals() to compare pairs properly
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Pair)) return false;
        Pair p = (Pair) o;
        return first.equals(p.first) && second.equals(p.second);
    }

    // Override hashCode() to make HashSet work correctly
    @Override
    public int hashCode() {
        return Objects.hash(first, second);
    }
}

public class Solution {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        Set<Pair> uniquePairs = new HashSet<>();

        for (int i = 0; i < n; i++) {
            String line = scanner.nextLine();
            String[] parts = line.split(" ");
            Pair pair = new Pair(parts[0], parts[1]);

            uniquePairs.add(pair);
            System.out.println(uniquePairs.size());
        }

        scanner.close();
    }
}
